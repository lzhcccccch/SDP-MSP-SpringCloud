eureka-client-service-url-defaultZone: http://localhost:8761/eureka/
spring-boot-admin-url: http://localhost:8010

eureka:
  client:
    # 是否在Eureka服务器中注册自己的信息以供其他服务发现,默认true.单机时用false
    register-with-eureka: false
    # 此客户端是否获取eureka服务器注册表上服务提供者的注册信息, 默认为true.单机服务端时用false
    fetch-registry: false
    # 设置eureka服务器所在的地址, 查询服务和注册服务都需要依赖这个地址. 多个用,隔开
    service-url:
      defaultZone: ${eureka-client-service-url-defaultZone}
      # 默认服务注册中心地址,可以同时向多个服务注册服务
      # defaultZone: http://192.168.21.3:10761/eureka/,http://192.168.21.4:10761/eureka/

spring:
  boot:
    #设置admin-server的地址
    admin:
      client:
        enabled: true
        url: ${spring-boot-admin-url}
        instance:
          metadata:
            project.name: ${info.project.name}

management:
  server:
    # 为了安全一般都启用独立的端口来访问后端的监控信息，默认与server.port相同
    port: ${server.port}
  endpoints:
    web:
      exposure:
        # 开放所有的端点(访问 http://localhost:${management.server.port}/actuator 查看所有开放且暴露的端点, 支持用户自定义端点)
        include: '*'
        # 本地测试禁用日志文件端点, 该配置项会导致 logging.file.path 配置失效, 在监控台看不到实时日志
        exclude: logfile
    enabled-by-default: true
  # 对外开放某个监控点
  endpoint:
    env:
      # 展示敏感信息, 如果某些节点的信息展示为*, 则对相应节点进行该配置, 版本不同可能导致 key 不同
      show-values: ALWAYS
    health:
      show-details: ALWAYS
      enabled: true
    # 其他
    beans:
      enabled: true

logging:
  file:
    path: classpath:/logs/

info:
  project:
    name: Spring Cloud Eureka Server